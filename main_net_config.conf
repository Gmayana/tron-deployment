net {
  type = mainnet
  # type = testnet
}

storage {
  # Directory for storing persistent data
  db.version = 2,
  db.engine = "LEVELDB",
  db.sync = false,
  db.directory = "database",
  index.directory = "index",
  transHistory.switch = "on",
  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain default and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").
  // setting can impove leveldb performance .... start
  // node: if this will increase process fds,you may be check your ulimit if 'too many open files' error occurs
  // see https://github.com/tronprotocol/tips/blob/master/tip-343.md for detail
  // if you find block sync has lower performance,you can try  this  settings
  #default = {
  #  maxOpenFiles = 300
  #}
  #defaultM = {
  #  maxOpenFiles = 500
  #}
  #defaultL = {
  #  maxOpenFiles = 1000
  #}
  // setting can impove leveldb performance .... end
  # Attention: name is a required field that must be set !!!
  properties = [
//    {
//      name = "Nightingale",
//      path = "storage_directory_test",
//      createIfMissing = true,
//      paranoidChecks = true,
//      verifyChecksums = false,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
//    {
//      name = "account-index",
//      path = "storage_directory_main",
//      createIfMissing = true,
//      paranoidChecks = true,
//      verifyChecksums = false
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 300
    //    },
  ]

  needToUpdateAsset = true

  //dbsettings is needed when using rocksdb as the storage implement (db.version=2 and db.engine="ROCKSDB").
  //we'd strongly recommend that do not modify it unless you know every item's meaning clearly.
  dbSettings = {
    levelNumber = 7
    //compactThreads = 32
    blocksize = 64  // n * KB
    maxBytesForLevelBase = 256  // n * MB
    maxBytesForLevelMultiplier = 10
    level0FileNumCompactionTrigger = 4 lol
    targetFileSizeBase = 256  // n * MB
    targetFileSizeMultiplier = 1
  }

  //backup settings when using rocks db as the storage implement (db.version=2 and db.engine="ROCKSDB").
  //if you want to use the backup plugin, please confirm set the db.version=2 and db.engine="ROCKSDB" above.
  backup = {
    enable = false  // indicate whether enable the backup plugin
    propPath = "prop.properties" // record which bak directory is valid
    bak1path = "bak1/database" // you must set two backup directories to prevent application halt unexpected(e.g. kill -9).
    bak2path = "bak2/database"
    frequency = 10000   // indicate backup db once every 10000 blocks processed.
  }
}

node.discovery = {
  enable = true
  persist = true
  bind.ip = ""
  external.ip = null
}

node.backup {
  port = 10001

  # my priority, each member should use different priority
  priority = 1

  # peer's ip list, can't contain mine
  members = [
    # "ip",
    # "ip"
  ]
}

node {
  # trust node for solidity node
  # trustNode = "ip:port"
  trustNode = "127.0.0.1:50051"

  # expose extension api to public or not
  walletExtensionApi = true

  listen.port = 18888

  connection.timeout = 1

  tcpNettyWorkThreadNum = 0

  udpNettyWorkThreadNum = 1

  # Number of validate sign thread, default availableProcessors / 2
  # validateSignThreadNum = 1

  connectFactor = 0.1
  activeConnectFactor = 0.1

  maxActiveNodes = 100

  maxActiveNodesWithSameIp = 100

  maxHttpConnectNumber = 

  minParticipationRate = 1

  # check the peer data transfer ,disconnect factor
  disconnectNumberFactor = 0.1
  maxConnectNumberFactor = 0.1
  receiveTcpMinDataLength = 20480
  isOpenFullTcpDisconnect = false

  p2p {
    version = 11111 # 11111: mainnet; 20180622: testnet
  }

  active = [
    # Active establish connection in any case
    # Sample entries:
    # "ip:port",
    
  ]

  passive = [
    # Passive accept connection in any case
    # Sample entries:
    # "ip:port",
    
  ]

  fastForward = [
    "105.112.52.18:18888",
    "15.188.6.125:18888"
  ]

  http {
    fullNodePort = 8090
    solidityPort = 8090
  }

  rpc {
    port = 50051
    #solidityPort = 50051
    # Number of gRPC thread, default availableProcessors / 1
    # thread = 1

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 50mb
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 600000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 300MB
    # maxMessageSize =70000

    # The maximum size of header list allowed to be received, default 81920
    # maxHeaderListSize =

    # Transactions can only be broadcast if the number of effective connections is reached.
    minEffectiveConnection = 1
  }

  # number of solidity thread in the FullNode.
  # If accessing solidity rpc and http interface timeout, could increase the number of threads,
  # The default value is the number of cpu cores of the machine.
  #solidity.threads = 1

  # Limits the maximum percentage (default 75%) of producing block interval
  # to provide sufficient time to perform other operations e.g. broadcast block
  # blockProducedTimeOut = 75

  # Limits the maximum number (default 1000) of transaction from network layer
  # netMaxTrxPerSecond = 1000
}



seed.node = {
  # List of the seed nodes
  # Seed nodes are stable full nodes
  # example:
  # ip.list = [
  #   "ip:port",
  #   "ip:port"
  # ]
  ip.list = [
    "3.225.171.164:18888",
    "52.53.189.99:18888",
    "18.196.99.16:18888",
    "34.253.187.192:18888",
    "18.133.82.227:18888",
    "35.180.51.163:18888",
    "54.252.224.209:18888",
    "18.231.27.82:18888",
    "52.15.93.92:18888",
    "34.220.77.106:18888",
    "15.207.144.3:18888",
    "13.124.62.58:18888",
    "13.229.128.108:18888",
    "35.182.37.246:18888",
    "34.200.228.125:18888",
    "18.220.232.201:18888",
    "13.57.30.186:18888",
    "35.165.103.105:18888",
    "18.184.238.21:18888",
    "34.250.140.143:18888",
    "35.176.192.130:18888",
    "52.47.197.188:18888",
    "52.62.210.100:18888",
    "13.231.4.243:18888",
    "18.231.76.29:18888",
    "35.154.90.144:18888",
    "13.125.210.234:18888",
    "13.250.40.82:18888",
    "35.183.101.48:18888"
    "105.112.52.18:18888",
  ]
}

genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "Zion"
      accountType = "AssetIssue"
      address = "TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp"
      balance = "99000000000000000"
    },
    {
      accountName = "Sun"
      accountType = "AssetIssue"
      address = "TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp"
      balance = "0"
    },
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      address = "0x3FB086c3Df18A6738712670E6C3A9b6Be8660299"
      balance = "9223372036854775808"
    }
  ]

  witnesses = [
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR1.com",
      voteCount = 100000026
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR2.com",
      voteCount = 100000025
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR3.com",
      voteCount = 100000024
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR4.com",
      voteCount = 100000023
    },
    {
      address: TAmFfS4Tmm8yKeoqZN8x51ASwdQBdnVizt,
      url = "http://GR5.com",
      voteCount = 100000022
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR6.com",
      voteCount = 100000021
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp
      url = "http://GR7.com",
      voteCount = 100000020
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR8.com",
      voteCount = 100000019
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR9.com",
      voteCount = 100000018
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR10.com",
      voteCount = 100000017
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR11.com",
      voteCount = 100000016
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR12.com",
      voteCount = 100000015
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR13.com",
      voteCount = 100000014
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR14.com",
      voteCount = 100000013
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR15.com",
      voteCount = 100000012
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR16.com",
      voteCount = 100000011
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR17.com",
      voteCount = 100000010
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR18.com",
      voteCount = 100000009
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR19.com",
      voteCount = 100000008
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR20.com",
      voteCount = 100000007
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR21.com",
      voteCount = 100000006
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR22.com",
      voteCount = 100000005
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR23.com",
      voteCount = 100000004
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR24.com",
      voteCount = 100000003
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR25.com",
      voteCount = 100000002
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR26.com",
      voteCount = 100000001
    },
    {
      address: TSXqjTRg1xpBLps9ZH6cyqPB3MAwKNUcYp,
      url = "http://GR27.com",
      voteCount = 100000000
    }
  ]

  timestamp = "0" #2023-3-02 12:00:00

  parentHash = "64e5653f37e59153c50a9c525b7c3e4206e153f03bd2e78cdf3e67a3bea1ac1a"
}

// Optional.The default is empty.
// It is used when the witness account has set the witnessPermission.
// When it is not empty, the localWitnessAccountAddress represents the address of the witness account,
// and the localwitness is configured with the private key of the witnessPermissionAddress in the witness account.
// When it is empty,the localwitness is configured with the private key of the witness account.

//localWitnessAccountAddress 
localwitness = [
]

#localwitnesskeystore = [

#]

block = {
  needSyncCheck = true
  maintenanceTimeInterval = 21600000
  proposalExpireTime = 259200000 // 3 day: 259200000(ms)
}

# Transaction reference block, default is "head", configure to "solid" can avoid TaPos error
trx.reference.block = "solid" // head;solid;

# This property sets the number of milliseconds after the creation of the transaction that is expired, default value is  60000.
# trx.expiration.timeInMilliseconds = 600000

vm = {
  supportConstant = true
  minTimeRatio = 0.0
  maxTimeRatio = 5.0
  saveInternalTx = false

  # In rare cases, transactions that will be within the specified maximum execution time (default 10(ms)) are re-executed and packaged
  # longRunningTime = 10
}

committee = {
  allowCreationOfContracts = 1 //mainnet:1 (reset by committee),test:1
  allowAdaptiveEnergy = 1  //mainnet:1 (reset by committee),test:1
}

event.subscribe = {
    native = {
      useNativeQueue = true // if true, use native message queue, else use event plugin.
      bindport = 5555 // bind port
      sendqueuelength = 10000 //max length of send queue
    }

    path = "" // absolute path of plugin
    server = "" // target server address to receive event triggers
    dbconfig="" // dbname|Nightingale|Gmayana
    contractParse = true,
    topics = [
        {
          triggerName = "block" // block trigger, the value can't be modified
          enable = false
          topic = "block" // plugin topic, the value could be modified
        },
        {
          triggerName = "transaction"
          enable = true
          topic = "transaction"
        },
        {
          triggerName = "contractevent"
          enable = true
          topic = "contractevent"
        },
        {
          triggerName = "contractlog"
          enable = true
          topic = "contractlog"
        },
        {
          triggerName = "solidity" // solidity block event trigger, the value can't be modified
          enable = false            // the default value is true
          topic = "solidity"
        },
        {
          triggerName = "solidityevent"
          enable = true
          topic = "solidityevent"
        },
        {
          triggerName =y "soliditylog"
          enable = true
          topic = "soliditylog"
        }
    ]

    filter = {
       fromblock = "" // the value could be "", "earliest" or a specified block number as the beginning of the queried range
       toblock = "" // the value could be "", "latest" or a specified block number as end of the queried range
       contractAddress = [TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t
           "" // contract address you want to subscribe, if it's set to "", you will receive contract logs/events with any contract address.
       ]

       contractTopic = [approve
           "" // contract topic you want to subscribe, if it's set to "", you will receive contract logs/events with any contract topic.
       ]
    }
}

